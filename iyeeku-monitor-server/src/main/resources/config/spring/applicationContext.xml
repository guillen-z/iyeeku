<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath:config/env/db.properties"/>

	<!--  使用c3p0数据源连接oracle数据库  -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="properties">
			<bean class="com.iyeeku.watch.utils.C3P0DatasourcePropertiesFactory" factory-method="getProperties">
				<constructor-arg type="java.lang.String" value="${user}"/>
				<constructor-arg type="java.lang.String" value="${password}"/>
				<constructor-arg type="java.lang.String" value="${run_mode}"/>
			</bean>
		</property>
		<property name="driverClass" value="${driverClass}"/>
		<property name="jdbcUrl" value="${jdbcUrl}"/>
<!--		<property name="user" value="${user}"/>
		<property name="password" value="${password}"/>-->
		<property name="initialPoolSize" value="10"></property>
		<property name="minPoolSize" value="10"></property>
		<property name="maxPoolSize" value="30"></property>
		<property name="acquireIncrement" value="5"></property>
		<property name="maxStatements" value="80"></property>
		<property name="maxStatementsPerConnection" value="5"></property>
		<property name="testConnectionOnCheckin" value="true"></property>
		<property name="idleConnectionTestPeriod" value="60"></property>
		<property name="autoCommitOnClose" value="false"></property>
		<!-- <property name="maxIdleTime" value="180"></property> -->
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="config/mybatis/SqlMapConfig.xml"/>
        <!--<property name="mapperLocations" value="classpath*:com/iyeeku/watch/mapper/*.xml"/>-->
	</bean>

	<!-- mapper配置
		MapperFactoryBean：根据mapper接口生成代理对象
	-->
	<!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		mapperInterface指定mapper接口
		<property name="mapperInterface" value="cn.itcast.ssm.mapper.UserMapper"/>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean> -->
	<!-- mapper批量扫描，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注册
		遵循规范：将mapper.java和mapper.xml映射文件名称保持一致，且在一个目录 中
		自动扫描出来的mapper的bean的id为mapper类名（首字母小写）
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描的包名
			如果扫描多个包，每个包中间使用半角逗号分隔
		-->
		<property name="basePackage" value="com.iyeeku.watch.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

	<!--<context:annotation-config/>-->
	<!-- 扫描service服务类包 -->
	<context:component-scan base-package="com.iyeeku.watch.service.impl"/>
	<context:component-scan base-package="com.iyeeku.watch.inbound"/>

</beans>