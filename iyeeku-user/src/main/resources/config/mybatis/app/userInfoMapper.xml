<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iyeeku.user.dao.IUserInfoDao">
	
	<!-- 
		整合 echo 缓存机制 , 更具实际场景确定是否需要开启缓存机制 
		前提条件需要mybatis开启自己的缓存，在base-config-sqlmap.xml中设置，
		如果不加上下面这个配置，就算开启了mybatis的缓存，也相当于没有启动缓存
		如果需要针对某个方法不需要配置缓存，则在方法上控制，可以使用 useCache="false"控制
	 -->
	 
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

	
	<select id="getAllUserInfos" parameterType="com.iyeeku.user.vo.UserInfoVO" resultType="java.util.HashMap">
		select * from IYEEKU_USERS
	</select>

	<select id="getAllUserInfosCount" parameterType="com.iyeeku.user.vo.UserInfoVO" resultType="java.lang.Integer">
		select count(*) FROM IYEEKU_USERS
	</select>

	<insert id="save" parameterType="com.iyeeku.user.vo.UserInfoVO">
		<selectKey resultType="java.lang.String" order="BEFORE" keyProperty="userid">
			select 'U'||lpad(iyeeku_users_userid.nextval,7,'0') userid from dual
		</selectKey>
		INSERT INTO IYEEKU_USERS(userid,loginname,passwd,nickname,avatar,email,mobile,sex,birthday,address,signature,createdtime,createduser,createdchannel,updatedtime,updateduser,updatechannel)
		VALUES (#{userid,jdbcType=VARCHAR},#{loginname,jdbcType=VARCHAR},#{passwd,jdbcType=VARCHAR},#{nickname,jdbcType=VARCHAR},#{avatar,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{mobile,jdbcType=VARCHAR},#{sex,jdbcType=VARCHAR},to_timestamp(#{birthday,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),#{address,jdbcType=VARCHAR},#{signature,jdbcType=VARCHAR},systimestamp,#{createduser,jdbcType=VARCHAR},#{createdchannel,jdbcType=VARCHAR},systimestamp,#{updateduser,jdbcType=VARCHAR},#{updatechannel,jdbcType=VARCHAR})
	</insert>



</mapper>