<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd"> 

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

    <!-- ========================== 自定义输出格式说明================================ -->  
    <!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->  
    <!-- #%r 输出自应用启动到输出该log信息耗费的毫秒数  -->  
    <!-- #%c 输出所属的类目，通常就是所在类的全名 -->  
    <!-- #%t 输出产生该日志事件的线程名 -->  
    <!-- #%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” -->  
    <!-- #%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  -->  
    <!-- #%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)  -->  
    <!-- ========================================================================== -->  
      
    <!-- ========================== 输出方式说明================================ -->  
    <!-- Log4j提供的appender有以下几种:  -->  
    <!-- org.apache.log4j.ConsoleAppender(控制台),  -->  
    <!-- org.apache.log4j.FileAppender(文件),  -->  
    <!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件), -->  
    <!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件),  -->  
    <!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方)   -->  
	<!-- ========================================================================== -->
	
	<appender name="STDOUT" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern"  
                value="[%d{yyyy-MM-dd HH:mm:ss}] [%x] [%p] [%l] [%m] %n" />  
		</layout>
	</appender>
	
	<appender name="THIRDLOGFILE" class="org.apache.log4j.RollingFileAppender">
		<param name="File" value="/tomcat/logs/app/iyeeku/node0/third.log" /> 
		<param name="Encoding" value="GBK" />
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->  
        <param name="Append" value="true" />
        <!-- 设置文件大小 -->  
        <param name="MaxFileSize" value="2048KB" />  
        <!-- 设置文件备份 -->  
        <param name="MaxBackupIndex" value="50" />
        <!-- 设置输出文件项目和格式 -->  
        <layout class="org.apache.log4j.PatternLayout">  
            <param name="ConversionPattern"
            	value="[%d{yyyy-MM-dd HH:mm:ss}] [%x] [%p] [%l] [%m] %n" />  
        </layout> 
	</appender>
	
	
	<appender name="IYEEKULOGFILE" class="org.apache.log4j.RollingFileAppender">
		<param name="File" value="/tomcat/logs/app/iyeeku/node0/iyeeku.log" /> 
		<param name="Encoding" value="GBK" />
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->  
        <param name="Append" value="true" />
        <!-- 设置文件大小 -->  
        <param name="MaxFileSize" value="2048KB" />  
        <!-- 设置文件备份 -->  
        <param name="MaxBackupIndex" value="50" />
        <!-- 设置输出文件项目和格式 -->  
        <layout class="org.apache.log4j.PatternLayout">  
            <param name="ConversionPattern"
            	value="[%d{yyyy-MM-dd HH:mm:ss}] [%x] [%p] [%l] [%m] %n" />  
        </layout> 
	</appender>
	
	<appender name="APPLOGFILE" class="org.apache.log4j.RollingFileAppender">
		<param name="File" value="/tomcat/logs/app/iyeeku/node0/train.log" /> 
		<param name="Encoding" value="GBK" />
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->  
        <param name="Append" value="true" />
        <!-- 设置文件大小 -->  
        <param name="MaxFileSize" value="2048KB" />  
        <!-- 设置文件备份 -->  
        <param name="MaxBackupIndex" value="50" />
        <!-- 设置输出文件项目和格式 -->  
        <layout class="org.apache.log4j.PatternLayout">  
            <param name="ConversionPattern"
            	value="[%d{yyyy-MM-dd HH:mm:ss}] [%x] [%p] [%l] [%m] %n" />  
        </layout> 
	</appender>
	
	<!-- 输出到日志文件 每天一个日志  -->  
    <appender name="DAILYLOGFILE" class="org.apache.log4j.DailyRollingFileAppender">     
        <param name="File" value="/tomcat/logs/app/iyeeku/node0/daily.log" />     
        <param name="DatePattern" value="'daily.'yyyy-MM-dd'.log'" />     
        <layout class="org.apache.log4j.PatternLayout">     
        	<param name="ConversionPattern"
            	value="[%d{yyyy-MM-dd HH:mm:ss}] [%x] [%p] [%l] [%m] %n" />   
        </layout>     
    </appender>

	<!-- 设置不同包中类的日志级别 , 生产时使用 info -->
	<!-- 如果additivity为true时 ，它本身的日志会回馈到root里面去 -->
<!--	<logger name="com.yq.yee" additivity="true">
        <level value="DEBUG"></level>
        <appender-ref ref="APPLOGFILE" />
        &lt;!&ndash; <appender-ref ref="STDOUT" /> &ndash;&gt;
    </logger>-->
    
    <!-- 设置 com.yxd.iyee 包日志  , 生产时使用 info -->
<!--    <logger name="com.yxd.iyee" additivity="true">
        <level value="DEBUG"></level>
        <appender-ref ref="DAILYLOGFILE" />
    </logger>-->

<!--    <logger name="com.iyeeku.user.dao.impl">
        <level value="DEBUG"></level>
        <appender-ref ref="STDOUT"/>
    </logger>-->

<!--   <logger name="com.springframework">
        <level value="DEBUG"/>
    </logger>

    <logger name="com">
        <level value="DEBUG"/>
    </logger>

    <logger name="org.mybatis">
        <level value="DEBUG"/>
    </logger>

    <logger name="org.apache">
        <level value="DEBUG"/>
    </logger>-->

 <!--   <logger name="com.mchange">
        <level value="DEBUG"/>
    </logger>-->

    <logger name="com.mchange.v2.async">
        <level value="INFO"/>
    </logger>

	<!-- 应用日志级别 -->
	<root>
		<level value="DEBUG" />
        <appender-ref ref="STDOUT"/>
	</root>
		
</log4j:configuration>