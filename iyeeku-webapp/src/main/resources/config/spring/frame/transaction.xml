<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>

			<!-- 需要由交给spring的aop来进行代理的方法的集合，如果应用有自己的方法需由spring来进行事务控制必须添加方法 -->

			<!-- 读取数据方法,一般采用只读事务 -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="criteria*" read-only="true" />

			<!-- 其他方法，如save，update，insert等对数据库进行写入操作的方法 -->
			<tx:method name="init*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="add*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="create*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="del*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="undel*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="remove*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="batchCommit*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="syn*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="send*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="import*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="dismiss*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="retrieve*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="refer*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="register*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="reload*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<!-- 流程相关方法 -->
			<tx:method name="start*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="commit*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>
			<tx:method name="reject*" propagation="REQUIRED" read-only="false" rollback-for="Exception"/>

		</tx:attributes>
	</tx:advice>

	<!-- spring采用AOP进行事务控制，这里指定了凡是实现了Service结尾接口中的所有方法需要由事务进行控制
	  	或者这种写法  	execution(* com.**.service.*Service.*(..))
	  -->
	<aop:config>
		<aop:pointcut id="serviceOperation" expression="execution(* *..*Service.*(..))" />
		<aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice" />

		<!-- ref引用的切面类 -->
<!--	<aop:aspect ref="pfRoleDaoImpl">
			<aop:pointcut id="" expression="execution(* *..*Service.*(..))"/>
			<aop:after-returning method=""/>
		</aop:aspect>-->

	</aop:config>

</beans>