<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!--   注意
		注意 springmvc.xml这个文件被加载
		如果被spring容器当成 contextConfigLocation 参数启动
		同时又被 springmvc DispatcherServlet 的contextConfigLocation 参数 启动
		整个项目中一个 Controller 类 会有2个实例 
	-->

	<!-- 启用spring 注解 -->
	<!--<context:annotation-config />-->

	<!-- 扫描注解包 -->
	<context:component-scan base-package="com.iyeeku.core.orm.impl"></context:component-scan>
	<context:component-scan base-package="com.iyeeku.**.dao.impl"></context:component-scan>
	<context:component-scan base-package="com.iyeeku.**.service.impl"></context:component-scan>
	<context:component-scan base-package="com.iyeeku.controller.*"></context:component-scan>


	<!-- 开启注解方案1 -->
	<!-- 注解方法处理 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" 
		/> -->
	<!-- 注解类映射处理 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" 
		/> -->

	<!-- 开启注解方案2 -->
	<mvc:annotation-driven />


	<!-- 静态资源访问，方案1 -->
	<!--<mvc:resources mapping="/static/**" location="/static/" /> <mvc:resources 
		mapping="/images/**" location="/WEB-INF/images/" /> <mvc:resources mapping="/css/**" 
		location="/WEB-INF/css/" /> <mvc:resources mapping="/js/**" location="/WEB-INF/js/" 
		/> -->

	<!-- 静态资源访问，方案2 (表示不对静态资源如CSS、JS、HTML等进行拦截) -->
	<mvc:default-servlet-handler />


	<!-- 视图解释类 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="suffix" value=".jsp"></property>
	</bean>


	<!-- Spring MVC JSON配置 , 配置spring MVC JSON配置，需要相关json包 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html; charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html; charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 文件上传配置 -->
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		<property name="defaultEncoding"> <value>UTF-8</value> </property> <property 
		name="maxUploadSize"> <value>104857600</value> </property> <property name="maxInMemorySize"> 
		<value>4096</value> </property> </bean> -->

</beans>