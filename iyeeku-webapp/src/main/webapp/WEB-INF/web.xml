<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">
  <display-name>iyeeku</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath:config/env/dataAccessContext.xml,
      classpath*:/config/spring/frame/*.xml,
      classpath*:/config/spring/app/*.xml
    </param-value>
  </context-param>

<!--  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>-->

<!--    <context-param>
        <param-name>isLog4jAutoInitializationDisabled</param-name>
        <param-value>false</param-value>
    </context-param>-->

    <!--
        log4j2 默认会找 classpath:/log4j2.xml , 可以进行如下额外配置自定义路径
    -->
<!--
   log4j 1.x 配置文件参数路径
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:/config/env/log4j_iyeeku.xml</param-value>
  </context-param>-->

  <!-- log4j2.x 配置文件参数路径 -->
<!--  <context-param>
    <param-name>log4jConfiguration</param-name>
    <param-value>classpath:/config/env/log4j2.xml</param-value>
  </context-param>-->

  <!-- 注意，这里有个先后顺序 -->
<!--  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>-->

  <!-- log4j2-begin -->
<!--  <listener>
    <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
  </listener>
  <filter>
    <filter-name>log4jServletFilter</filter-name>
    <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>log4jServletFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
    <dispatcher>INCLUDE</dispatcher>
    <dispatcher>ERROR</dispatcher>
  </filter-mapping>-->
  <!-- log4j2-end -->

  <!-- 配置logback日志框架 -->
  <context-param>
    <param-name>logbackConfigLocation</param-name>
    <param-value>classpath:/config/log/logback.xml</param-value>
  </context-param>
  <listener>
    <listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
  </listener>


  <listener>
    <listener-class>com.iyeeku.core.webapp.ContextInit</listener-class>
  </listener>

  <!-- springMVC核心配置 -->
  <!-- 配置spring mvc的相关内容，此处的servlet-name任意，但必须有<your servlet-name>-servlet.xml与之对应 -->
  <servlet>
    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:/config/spring/mvc/springmvc.xml</param-value>
    </init-param>
    <!-- 启动顺序，让这个Servlet随Servlet容器一起启动。 -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>


  <!-- 配置过滤器，同时把所有的请求都转为utf-8编码 -->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>



  <!-- 配置session超时时间，单位分钟 -->
  <session-config>
    <session-timeout>20</session-timeout>
  </session-config>






</web-app>
